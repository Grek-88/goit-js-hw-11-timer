{"version":3,"sources":["index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","onTick","start","setInterval","timeNow","Date","now","deltaTime","getTimeComponents","time","pad","Math","floor","value","String","padStart","timer","updateInterface","textContent"],"mappings":";AAkEE,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAlEF,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,4BAI3BI,EAAAA,WACgC,SAAA,EAAA,GAArBC,IAAAA,EAAAA,EAAAA,WAAYC,EAAAA,EAAAA,OAAS,EAAA,KAAA,GACzBD,KAAAA,WAAaA,EACbC,KAAAA,OAASA,EACTC,KAAAA,QAsDX,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAnDE,MAAA,WAAQ,IAAA,EAAA,KACHC,YAAY,WACHC,IAAAA,EAAUC,KAAKC,MACfC,EAAY,EAAKP,WAAaI,EACA,EAAA,EAAKI,kBAAkBD,GAAnDd,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3B,EAAKG,OAAO,CAAER,KAAAA,EAAMG,MAAAA,EAAOC,KAAAA,EAAMC,KAAAA,KAClC,OA6CT,CAAA,IAAA,oBA1CE,MAAA,SAAkBW,GAuBX,MAAA,CAAEhB,KAlBI,KAAKiB,IAAIC,KAAKC,MAAMH,EAAQ,QAkB1Bb,MAZD,KAAKc,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAY9CZ,KAPT,KAAKa,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAOlCX,KAFf,KAAKY,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,SAqB1D,CAAA,IAAA,MAhBE,MAAA,SAAII,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,SAenC,EA1DIhB,GA+CAiB,EAAQ,IAAIjB,EAAe,CAEzBC,WAAY,IAAIK,KAAK,gBACrBJ,OAAQgB,IAGhB,SAASA,EAA6C,GAA3BxB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC1CN,EAAKC,KAAKyB,YAAiBzB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMsB,YAAiBtB,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKqB,YAAiBrB,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKoB,YAAiBpB,GAAAA,OAAAA","file":"src.fa413281.js","sourceRoot":"..\\src","sourcesContent":["const refs = {\r\n    days: document.querySelector('span[data-value=\"days\"]'),\r\n    hours: document.querySelector('span[data-value=\"hours\"]'),\r\n    mins: document.querySelector('span[data-value=\"mins\"]'),\r\n    secs: document.querySelector('span[data-value=\"secs\"]')\r\n};\r\n\r\n\r\nclass CountdownTimer { \r\n    constructor({targetDate, onTick}) {\r\n        this.targetDate = targetDate;\r\n        this.onTick = onTick;\r\n        this.start();\r\n    }\r\n    \r\n    start() {\r\n         setInterval(() => {\r\n            const timeNow = Date.now();\r\n            const deltaTime = this.targetDate - timeNow;\r\n            const { days, hours, mins, secs } = this.getTimeComponents(deltaTime);\r\n            this.onTick({ days, hours, mins, secs })\r\n        }, 1000);\r\n    }\r\n\r\n    getTimeComponents(time) {\r\n    /*\r\n    * Оставшиеся дни: делим значение UTC на 1000 * 60 * 60 * 24, количество\r\n    * миллисекунд в одном дне (миллисекунды * секунды * минуты * часы)\r\n    */\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    /*\r\n    * Оставшиеся часы: получаем остаток от предыдущего расчета с помощью оператора\r\n    * остатка % и делим его на количество миллисекунд в одном часе\r\n    * (1000 * 60 * 60 = миллисекунды * минуты * секунды)\r\n    */\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    /*\r\n    * Оставшиеся минуты: получаем оставшиеся минуты и делим их на количество\r\n    * миллисекунд в одной минуте (1000 * 60 = миллисекунды * секунды)\r\n    */\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    /*\r\n    * Оставшиеся секунды: получаем оставшиеся секунды и делим их на количество\r\n    * миллисекунд в одной секунде (1000)\r\n    */\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n        \r\n    return { days, hours, mins, secs }\r\n    }\r\n\r\n    pad(value) {\r\n    return String(value).padStart(2, '0')\r\n    }\r\n};\r\n\r\nconst timer = new CountdownTimer({\r\n        // selector: '#timer-1',\r\n        targetDate: new Date('Jul 28, 2021'),\r\n        onTick: updateInterface, \r\n    });\r\n\r\nfunction updateInterface({ days, hours, mins, secs }) {\r\n    refs.days.textContent = `${days}`;\r\n    refs.hours.textContent = `${hours}`;\r\n    refs.mins.textContent = `${mins}`;\r\n    refs.secs.textContent = `${secs}`;\r\n };"]}